@model PortalForReading.Models.ArticleCreateView

@{
    ViewBag.Title = "Create Article";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    <h3>@ViewBag.Title;</h3>
    <div style=" background-color: #CCD6DD;
    border-radius: 15px;
    border: groove;
    border-color: #66757F">
        @using (Html.BeginForm("Create", "Article", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Txt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Txt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Txt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.UploadImg, new { type = "file",  accept=".png,.jpg,.gif"})
                    @Html.ValidationMessageFor(model => model.UploadImg)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Book, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.UploadBook, new { type = "file",  accept=".pdf"})
                    @Html.ValidationMessageFor(model => model.UploadBook)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AuthorId, Model.Authors)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class=" col-md-10">
                        @foreach (var item in Model.Categories)
                        {
                            <input type="checkbox" name="SelectedCategories" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                            @Html.Label(item.Text, new { @class = "control-label" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</body>
</html>
